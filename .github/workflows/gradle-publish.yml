# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  release:
    types: [created]

jobs:
  gradle:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Build with Gradle
      with:
        arguments: clean build -i -s
      
    - name: Prepare publications
      env:
        GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
        GPG_PASSWORD: ${{ secrets.GPG_PASSWORD }}
        GPG_RINGFILE: ${{ secrets.GPG_RINGFILE }}
        GPG_SECRET_CONTENT: ${{ secrets.GPG_KEY_CONTENTS }}
      run: |
        git fetch --unshallow
        sudo bash -c "echo '$GPG_SECRET_CONTENT' | base64 -d > '$GPG_RINGFILE'
        sudo bash -c "echo 'signing.keyId=$GPG_KEY_ID >> gradle.properties"
        sudo bash -c "echo 'signing.password=$GPG_PASSWORD >> gradle.properties"
        sudo bash -c "echo 'signing.secretKeyRingFile=$GPG_RINGFILE >> gradle.properties"

    - name: Publish jvm/js/posix targets
      if: ${{ startsWith(matrix.os, 'macos') }}
      with:
        arguments: publish -PapiKey=${{ secrets.SONOTYPE_TOKEN }}
      
    - name: Publish mingwX64 target
      if: ${{ startsWith(matrix.os, 'windows') }}
      with:
        arguments: publishMingwX64PublicationToMavenRepository -PapiKey=${{ secrets.SONOTYPE_TOKEN }}
